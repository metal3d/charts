{{- if .Values.options.disableRegistration }}
You disabled registration, so you need to create an admin user.

Connect to the application terminal, do the following:

    POD=$(kubectl -n {{ .Release.Namespace }} get pods -o jsonpath="{.items[0].metadata.name}")
    kubectl -n {{ .Release.Namespace }} exec -it $POD -c gitea -- su - git

    # in the created terminal, now change variables for your needs and type:
    USERNAME=admin_username
    PASSWORD=password
    EMAIL=you@domain.tld
    gitea --config /data/gitea/conf/app.ini admin \
      create-user \
      --admin \
      --username="$USERNAME" \
      --password="$PASSWORD" \
      --email="$EMAIL"
    exit

Then you will be able to login with that admin user.

For futur user creation, the admin user will be able to create them from the web interface.
{{- end}}

1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ . }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "gitea.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "gitea.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "gitea.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "gitea.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl port-forward $POD_NAME 8080:80
{{- end }}
